#include <iostream>
#include <vector>

using namespace std;

const int MAX_VALUE = 32000;
//Используем дерево Фенвика
int main() {
	int n,x,y;
	vector<int> b(MAX_VALUE+1,0);	//Вектор, в котором хранится дерево Фенвика, в каждом элементе которого хранится сумма
									//некоторых элементов массива A на отрезке [F(i),i]
	vector<int> res;//Результирующий массив
	cin>>n;//Ввод количества звёзд
	res.resize(n);
	for (int i=n;i;i--) {//n обходов
		cin>>x>>y;//Получаем координаты, координаты по оY не нужны, т.к входные данные отсортированы по ним, затем по оX

		int result = 0,x1=x;//Обнуляем переменную для хранения результата для текущей звезды и копируем координату x

		while(x1 >= 0){					//Процедура суммирования. Сначала она прибавляет к ответу значение суммы
			result += b[x1];			//на отрезке [F(R); R], затем берёт сумму на отрезке [F(F(R)-1); F(R)-1], и так далее, пока не дойдёт до нуля.
			x1 &= (x1 + 1);				//В качестве F взята функция x &= (x + 1);
			x1--;
		}
		res[result]++;//увеличиваем количество звёзд уровня result

		//Функция inc движется в обратную сторону - в сторону увеличения индексов, обновляя значения суммы Tj только для
		//тех позиций, для которых это нужно, т.е. для всех j, для которых F(j) <= i <= j.
		//В качестве функции F взята функция x |= (x+1);
		while(x <= MAX_VALUE){
			b[x]++;
			x |= (x+1);
		}
	}

	for (int i=0;i<n;){//Вывод на экран
		cout<<res[i++]<<"\n";
	}
	return 0;
}
